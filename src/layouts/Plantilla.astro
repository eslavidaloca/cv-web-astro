---
import "@radix-ui/themes/styles.css";
import "@styles/base/base.css";
import "@styles/animations/photo-spin.scss";
import "animate.css";

import Navbar from "@/components/es/Navbar.tsx";
import NavbarTranslate from "@/components/NavbarTranslate.tsx";

import { isDarkMode } from "@/nanostores";
import { cn } from "@/lib/utils";

import Head from "@/components/es/Head.astro";
import Header from "@/components/es/layout/Header.astro";
import Sonner from "@/components/es/Sonner.tsx";
import WhatsappDialog from "@/components/es/Whatsapp-dialog.tsx";
import ThemeToggle from "@/components/ThemeToggle";
import { Toaster } from "@/components/ui/sonner";

import Analytics from "@vercel/analytics/astro";
import { Icon } from "astro-icon/components";

type Props = {
	className?: string;
};

const { className } = Astro.props;

const currentPath = Astro.url.pathname.replace(/^\/(en|es)\//, '/');
const lang = Astro.currentLocale || 'es';
---
<!doctype html>
<html lang={lang}>
	<head>
		<Head />
	</head>
	<body class={isDarkMode ? "dark" : "light"}>
		<Header>
			<Navbar slot="mid-header" client:load>
				<Icon name="mdi:chart-timeline-variant-shimmer" slot="iconTimeline" class="size-[120px] text-white" />
				<Icon name="mdi:server-security" slot="iconBack" class="size-[120px] text-olive-900 dark:text-white mx-auto" />
				<Icon name="mdi:monitor-shimmer" slot="iconFront" class="size-[120px] text-white mx-auto" />
			</Navbar>
			<div class="flex items-center gap-x-2 2xl:gap-x-6 lg:gap-x-4 md:gap-x-4" slot="right-header">
				<NavbarTranslate lang={lang} currentPath={currentPath} client:load>
					<Icon slot="iconLang" name="mdi:language" class="size-[22px] mr-1" />
					<Icon slot="iconUsa" name="flag-us" class="size-[25px] m-0" />
					<Icon slot="iconMx" name="flag-mx" class="size-[25px] m-0" />
				</NavbarTranslate>
				<a
				href="https://github.com/eslavidaloca"
				target="_blank"
				rel="noreferrer"
				aria-label="github de eslavi"
				class="triggerBtn transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground rounded-md p-2"
				>
				<Icon name="github" class="size-[22px]" />
				</a>
				
				<a
				href="https://www.linkedin.com/in/eslavi/"
				target="_blank"
				rel="noreferrer"
				aria-label="linkedin de eslavi"
				class="triggerBtn transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground rounded-md p-2"
				>
				<Icon name="linkedin" class="size-[22px] stroke-0" />
				</a>
				<WhatsappDialog client:load>
					<Icon slot="iconWhatsapp" name="mdi:whatsapp" class="size-[22px] stroke-0" />
				</WhatsappDialog>
				<Sonner client:only="react">
					<Icon slot="iconBtn" name="mdi:email-outline" class="size-[22px] stroke-0" />
				</Sonner>
				
				<ThemeToggle client:load />
			</div>
		</Header>
		<div class="ball" transition:persist></div>
		<main class={cn(
			"flex flex-col items-center p-4",
			className
		)}>
			<slot />
		</main>
		<Analytics />

		<Toaster client:only="react"/> 
	</body>
</html>

<script>
	import { animate, frame } from "motion"

	const balls = document.querySelectorAll('div.ball');

	balls.forEach((ball) => {
		const { top, left, width, height } = ball.getBoundingClientRect()
		const initialX = left + width / 2
		const initialY = top + height / 2
	
		let pointerX = 0
		let pointerY = 0
	
		function springToPointer() {
			animate(
				ball,
				{
					x: pointerX - initialX,
					y: pointerY - initialY,
				},
				{ type: "spring", stiffness: 100, damping: 10 }
			)
		}
	
		document.addEventListener("pointermove", (e) => {
			pointerX = e.clientX
			pointerY = e.clientY
	
			frame.postRender(springToPointer)
		})
		
	})

</script>